services:
  backend:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: final
    container_name: hello-dotnet
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000

  frontend:
    build:
      context: ./frontend
      target: final
      args:
        NODE_ENV: production
    container_name: hello-node
    environment:
      PORT: 4000

  migration-tool:
    build: ./migration
    container_name: hello-migration-tool
    volumes:
      - ./app:/app
    depends_on:
      db:
        condition: service_healthy

  webserver:
    build:
      context: ./frontend
      target: webserver
    container_name: hello-nginx
    depends_on:
      - backend
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  db:
    image: postgres:alpine3.20
    container_name: hello-postgres
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: 12345678
      PGUSER: postgres
    volumes:
      - ./dump-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
      start_interval: 10s

  adminer:
    image: adminer
    ports:
      - 8081:8080
